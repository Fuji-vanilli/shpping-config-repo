server:
  port: 7140

spring:
  data:
    mongodb:
      uri: mongodb://localhost:27017/SH-ORDER-DB

  cloud:
    compatibility-verifier:
      enabled: false

#kafka properties
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.shoppingms.orderservice.event.OrderPlacedEvent

eureka:
  client:
    serviceUrl:
      defaultZone:  http://eureka:1234@localhost:8761/eureka/

logging:
  level:
    io.github.resilience4j: DEBUG


#actuator
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

  tracing:
    sampling:
      probability: 1.0

#resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventoryService:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 10
